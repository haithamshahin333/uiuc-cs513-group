digraph NYPL_Data_Cleaning_Workflow {
    rankdir=TB;
    node [shape=box, style=filled];
    
    raw_menu_csv [label="Raw Menu CSV", fillcolor=lightblue];
    raw_menuitem_csv [label="Raw MenuItem CSV", fillcolor=lightblue];
    
    profiling [label="Data Profiling\n& Analysis", fillcolor=lightyellow];
    sql_analysis [label="SQL Quality\nAnalysis", fillcolor=lightyellow];
    
    menu_cleaning [label="Menu Dataset\nCleaning", fillcolor=lightgreen];
    string_trim [label="String Trimming", fillcolor=lightgreen];
    type_convert [label="Data Type\nConversion", fillcolor=lightgreen];
    value_std [label="Value\nStandardization", fillcolor=lightgreen];
    geo_enrich [label="Geographic\nEnrichment", fillcolor=lightgreen];
    wikidata [label="Wikidata\nReconciliation", fillcolor=lightgreen];
    opencage [label="OpenCage\nGeocoding", fillcolor=lightgreen];
    column_cleanup [label="Column\nCleanup", fillcolor=lightgreen];
    
    menuitem_cleaning [label="MenuItem Dataset\nCleaning", fillcolor=lightcoral];
    price_valid [label="Price Data\nValidation", fillcolor=lightcoral];
    price_impute [label="High Price\nImputation", fillcolor=lightcoral];
    high_price_valid [label="High Price\nValidation", fillcolor=lightcoral];
    price_logic [label="Price Logic\nValidation", fillcolor=lightcoral];
    field_valid [label="Required Fields\nValidation", fillcolor=lightcoral];
    position_valid [label="Position Data\nValidation", fillcolor=lightcoral];
    
    quality_valid [label="Quality\nValidation", fillcolor=lightgray];
    before_after [label="Before/After\nAnalysis", fillcolor=lightgray];
    
    clean_menu_csv [label="Clean Menu CSV", fillcolor=lightpink];
    clean_menuitem_csv [label="Clean MenuItem CSV", fillcolor=lightpink];
    quality_report [label="Quality Report", fillcolor=lightpink];
    workflow_doc [label="Workflow\nDocumentation", fillcolor=lightpink];
    
    raw_menu_csv -> profiling;
    raw_menuitem_csv -> profiling;
    profiling -> sql_analysis;
    
    raw_menu_csv -> menu_cleaning;
    menu_cleaning -> string_trim;
    string_trim -> type_convert;
    type_convert -> value_std;
    value_std -> geo_enrich;
    geo_enrich -> wikidata;
    wikidata -> opencage;
    opencage -> column_cleanup;
    column_cleanup -> clean_menu_csv;
    
    raw_menuitem_csv -> menuitem_cleaning;
    menuitem_cleaning -> price_valid;
    price_valid -> price_impute;
    price_impute -> high_price_valid;
    high_price_valid -> price_logic;
    price_logic -> field_valid;
    field_valid -> position_valid;
    position_valid -> clean_menuitem_csv;
    
    clean_menu_csv -> quality_valid;
    clean_menuitem_csv -> quality_valid;
    quality_valid -> before_after;
    raw_menu_csv -> before_after;
    raw_menuitem_csv -> before_after;
    
    before_after -> quality_report;
    before_after -> workflow_doc;
    
    subgraph cluster_input {
        label="Input Data";
        style=dashed;
        raw_menu_csv;
        raw_menuitem_csv;
    }
    
    subgraph cluster_profiling {
        label="Data Profiling";
        style=dashed;
        profiling;
        sql_analysis;
    }
    
    subgraph cluster_menu_clean {
        label="Menu Cleaning Pipeline";
        style=dashed;
        menu_cleaning;
        string_trim;
        type_convert;
        value_std;
        geo_enrich;
        wikidata;
        opencage;
        column_cleanup;
    }
    
    subgraph cluster_menuitem_clean {
        label="MenuItem Cleaning Pipeline";
        style=dashed;
        menuitem_cleaning;
        price_valid;
        price_impute;
        high_price_valid;
        price_logic;
        field_valid;
        position_valid;
    }
    
    subgraph cluster_validation {
        label="Quality Validation";
        style=dashed;
        quality_valid;
        before_after;
    }
    
    subgraph cluster_output {
        label="Output Data";
        style=dashed;
        clean_menu_csv;
        clean_menuitem_csv;
        quality_report;
        workflow_doc;
    }
}
